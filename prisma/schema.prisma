// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Department {
  ENGINEERING
  HUMANITIES
  LIFE_SCIENCES
  PHYSICAL_SCIENCES
  SOCIAL_SCIENCES
}

model Student {
  id            String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  firstName     String       @db.VarChar(80)
  preferredName String?      @db.VarChar(80)
  lastName      String       @db.VarChar(80)
  email         String       @unique @db.VarChar(100)
  jobs          LabeledJob[]
  departments   Department[]
  // majors        Major[]
  // minors        Minor[]
}

model Researcher {
  id        String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  firstName String @db.VarChar(80)
  lastName  String @db.VarChar(80)
  email     String @unique @db.VarChar(100)
  jobs      Job[]
}

enum Duration {
  QUARTERLY
  SUMMER
  ACADEMIC_YEAR
  YEAR_ROUND
}

model Job {
  id          Int          @id @default(autoincrement())
  created     DateTime     @default(now())
  closingDate DateTime? // maybe
  closed      Boolean
  title       String       @db.VarChar(50)
  description String
  posters     Researcher[]
  applicants  LabeledJob[]
  paid        Boolean
  duration    Duration
  departments Department[]
  weeklyHours Int
  credit      Boolean
}

enum JobStatus {
  HIDDEN
  INTERESTED
  IN_PROGRESS
  APPLIED
  IN_REVIEW
  WITHDRAWN
  ACCEPTED
  REJECTED
}

model LabeledJob {
  job            Job       @relation(fields: [jobId], references: [id])
  jobId          Int
  applicant      Student   @relation(fields: [applicantEmail], references: [email])
  applicantEmail String    @db.VarChar(100)
  lastUpdated    DateTime  @default(now())
  status         JobStatus
  bookmarked     Boolean   @default(false)

  @@id([jobId, applicantEmail])
}
